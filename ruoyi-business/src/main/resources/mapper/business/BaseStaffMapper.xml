<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.business.mapper.BaseStaffMapper">
    
    <resultMap type="BaseStaff" id="BaseStaffResult">
        <result property="staffId"    column="staff_id"    />
        <result property="staffName"    column="staff_name"    />
        <result property="staffPhone"    column="staff_phone"    />
        <result property="hotelId"    column="hotel_id"    />
        <result property="departmentId"    column="department_id"    />
        <result property="staffPassword"    column="staff_password"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectBaseStaffVo">
        select staff_id, staff_name, staff_phone, hotel_id, department_id, staff_password, remark from base_staff
    </sql>

    <select id="selectBaseStaffList" parameterType="BaseStaff" resultMap="BaseStaffResult">
        <include refid="selectBaseStaffVo"/>
        <where>  
            <if test="staffName != null  and staffName != ''"> and staff_name like concat('%', #{staffName}, '%')</if>
            <if test="staffPhone != null  and staffPhone != ''"> and staff_phone = #{staffPhone}</if>
            <if test="hotelId != null "> and hotel_id = #{hotelId}</if>
            <if test="departmentId != null "> and department_id = #{departmentId}</if>
            <if test="staffPassword != null  and staffPassword != ''"> and staff_password = #{staffPassword}</if>
        </where>
    </select>
    
    <select id="selectBaseStaffByStaffId" parameterType="Long" resultMap="BaseStaffResult">
        <include refid="selectBaseStaffVo"/>
        where staff_id = #{staffId}
    </select>
        
    <insert id="insertBaseStaff" parameterType="BaseStaff" useGeneratedKeys="true" keyProperty="staffId">
        insert into base_staff
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="staffName != null and staffName != ''">staff_name,</if>
            <if test="staffPhone != null and staffPhone != ''">staff_phone,</if>
            <if test="hotelId != null">hotel_id,</if>
            <if test="departmentId != null">department_id,</if>
            <if test="staffPassword != null and staffPassword != ''">staff_password,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="staffName != null and staffName != ''">#{staffName},</if>
            <if test="staffPhone != null and staffPhone != ''">#{staffPhone},</if>
            <if test="hotelId != null">#{hotelId},</if>
            <if test="departmentId != null">#{departmentId},</if>
            <if test="staffPassword != null and staffPassword != ''">#{staffPassword},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateBaseStaff" parameterType="BaseStaff">
        update base_staff
        <trim prefix="SET" suffixOverrides=",">
            <if test="staffName != null and staffName != ''">staff_name = #{staffName},</if>
            <if test="staffPhone != null and staffPhone != ''">staff_phone = #{staffPhone},</if>
            <if test="hotelId != null">hotel_id = #{hotelId},</if>
            <if test="departmentId != null">department_id = #{departmentId},</if>
            <if test="staffPassword != null and staffPassword != ''">staff_password = #{staffPassword},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where staff_id = #{staffId}
    </update>

    <delete id="deleteBaseStaffByStaffId" parameterType="Long">
        delete from base_staff where staff_id = #{staffId}
    </delete>

    <delete id="deleteBaseStaffByStaffIds" parameterType="String">
        delete from base_staff where staff_id in 
        <foreach item="staffId" collection="array" open="(" separator="," close=")">
            #{staffId}
        </foreach>
    </delete>
</mapper>